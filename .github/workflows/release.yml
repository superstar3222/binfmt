name: release

on:
  workflow_dispatch:
    inputs:
      qemu_repo:
        description: 'QEMU source git repo'
        required: false
      qemu_ref:
        description: 'QEMU git ref (ie. tag, branch or sha)'
        required: false
      qemu_version:
        description: 'QEMU version (e.g. v5.2.0)'
        required: true
      target:
        description: 'Bake target'
        required: true
        default: 'mainline'
      latest:
        description: 'Create latest tag'
        required: true
        default: 'false'
      dry-run:
        description: 'Dry run'
        required: false
        default: 'true'

env:
  REPO_SLUG: tonistiigi/binfmt

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Prepare
        id: prep
        run: |
          REPO=$(docker buildx bake --print ${{ github.event.inputs.target }} | jq --raw-output '.. | .args?.QEMU_REPO | select(.)')
          if [ "${{ github.event.inputs.qemu_repo }}" != "" ]; then
            QEMU_REPO=${{ github.event.inputs.qemu_repo }}
          fi
          REF=$(docker buildx bake --print ${{ github.event.inputs.target }} | jq --raw-output '.. | .args?.QEMU_VERSION | select(.)')
          if [ "${{ github.event.inputs.qemu_ref }}" != "" ]; then
            REF=${{ github.event.inputs.qemu_ref }}
          fi
          TAG=${{ github.event.inputs.qemu_version }}-${{ github.run_number }}
          if [ "${{ github.event.inputs.target }}" = "mainline" ]; then
            GIT_TAG=deploy/${TAG}
          else
            GIT_TAG=${{ github.event.inputs.target }}/${TAG}
          fi
          echo ::set-output name=repo::${REPO}
          echo ::set-output name=ref::${REF}
          echo ::set-output name=version::${{ github.event.inputs.qemu_version }}
          echo ::set-output name=tag::${TAG}
          echo ::set-output name=git_tag::${GIT_TAG}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: ${{ env.REPO_SLUG }}:master
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        if: github.event.inputs.dry-run != 'true'
        with:
          username: ${{ secrets.DOCKERIO_USERNAME }}
          password: ${{ secrets.DOCKERIO_PASSWORD }}
      -
        uses: docker/bake-action@v1
        with:
          targets: ${{ github.event.inputs.target }}-all
          push: ${{ github.event.inputs.dry-run != 'true' }}
        env:
          REPO: ${{ env.REPO_SLUG }}
          TAG: ${{ steps.prep.outputs.tag }}
          LATEST: ${{ github.event.inputs.latest }}
          QEMU_REPO: ${{ steps.prep.outputs.repo }}
          QEMU_VERSION: ${{ steps.prep.outputs.ref }}
      -
        name: Create Release
        uses: softprops/action-gh-release@v1
        if: github.event.inputs.dry-run != 'true'
        with:
          name: ${{ steps.prep.outputs.git_tag }}
          tag_name: ${{ steps.prep.outputs.git_tag }}
          body: |
            QEMU [${{ steps.prep.outputs.version }}](${{ steps.prep.outputs.repo }}/tree/${{ steps.prep.outputs.ref }}) - `${{ steps.prep.outputs.ref }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Dump context
        if: always()
        uses: crazy-max/ghaction-dump-context@v1