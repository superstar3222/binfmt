name: ci

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  REPO_SLUG: tonistiigi/binfmt

jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        script:
          - ./hack/lint
          - ./hack/validate-vendor
          - ./hack/install-and-test
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Run
        run: |
          ${{ matrix.script }}

  build:
    runs-on: ubuntu-latest
    needs: [ validate ]
    strategy:
      fail-fast: false
      matrix:
        target:
          - mainline
          - buildkit
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.binfmt-cache
          key: ${{ runner.os }}-binfmt-${{ matrix.target }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-binfmt-${{ matrix.target }}-
            ${{ runner.os }}-binfmt-
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REPO_SLUG }}
          tags: |
            type=ref,event=branch,enable=${{ matrix.target == 'mainline' }}
            type=ref,event=branch,prefix=${{ matrix.target }}-,enable=${{ matrix.target != 'mainline' }}
          flavor: |
            latest=false
          labels: |
            org.opencontainers.image.title=Binfmt
            org.opencontainers.image.description=Cross-platform emulator collection distributed with Docker images
          bake-target: meta-helper
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          config: .github/buildkit.toml
          buildkitd-flags: --allow-insecure-entitlement=security.insecure
      -
        name: Test buildkit
        if: matrix.target == 'buildkit'
        uses: docker/bake-action@v1
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: buildkit-test
      - name: Load mainline for testing
        if: matrix.target == 'mainline'
        uses: docker/bake-action@v1
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: mainline
          load: true
          set: |
            *.cache-from=type=local,src=/tmp/.binfmt-cache/${{ matrix.target }}
            mainline.tags=tonistiigi/binfmt:test
      - name: Test mainline
        if: matrix.target == 'mainline'
        run: |
          docker run --rm --privileged tonistiigi/binfmt:test --uninstall amd64,arm64,arm,ppc64le,s390x,riscv64
          docker run --rm --privileged tonistiigi/binfmt:test --install all
          docker run --rm arm64v8/alpine uname -a
          docker run --rm arm32v7/alpine uname -a
          docker run --rm ppc64le/alpine uname -a
          docker run --rm s390x/alpine uname -a
          docker run --rm tonistiigi/debian:riscv uname -a
          docker run --rm --platform=linux/s390x s390x/ubuntu apt update
          docker run --rm --platform=linux/ppc64le ppc64le/ubuntu apt update
          docker run --rm --platform=linux/arm64 arm64v8/ubuntu apt update
      - name: Test Syscalls
        if: matrix.target == 'mainline'
        run: |
          set -x
          docker buildx build --platform=linux/amd64,linux/arm64,linux/386,linux/arm,linux/ppc64le,linux/s390x --target=run --allow security.insecure --build-arg CONFIG_RT_GROUP_SCHED=false ./test
      -
        name: Login to DockerHub
        if: startsWith(github.ref, 'refs/heads/')
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERIO_USERNAME }}
          password: ${{ secrets.DOCKERIO_PASSWORD }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Build ${{ matrix.target }}
        uses: docker/bake-action@v1
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: ${{ matrix.target }}-all
          push: ${{ startsWith(github.ref, 'refs/heads/') }}
          set: |
            *.cache-from=type=local,src=/tmp/.binfmt-cache/${{ matrix.target }}
            *.cache-to=type=local,dest=/tmp/.binfmt-cache/${{ matrix.target }}-new
      -
        # FIXME: Temp fix for https://github.com/moby/buildkit/issues/1850
        name: Move cache
        run: |
          rm -rf /tmp/.binfmt-cache/${{ matrix.target }}
          mv /tmp/.binfmt-cache/${{ matrix.target }}-new /tmp/.binfmt-cache/${{ matrix.target }}
