name: deploy

on: [deployment]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERIO_USERNAME }}
          password: ${{ secrets.DOCKERIO_PASSWORD }}
      -
        uses: docker/setup-buildx-action@v1
        name: Setup build
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deployment info
        id: info
        run: |
          echo "::set-output name=deployment_id::$(cat $GITHUB_EVENT_PATH | jq .deployment.id)"
          echo "::set-output name=deployment_target::$(cat $GITHUB_EVENT_PATH | jq -r .deployment.payload.target)"
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Build and push
        env:
          DEPLOYMENT_TARGET: "${{ steps.info.outputs.deployment_target }}"
        if: ${{ success() }}
        id: build
        run: |
          docker run --rm --privileged tonistiigi/binfmt --install=all
          [ -n "$DEPLOYMENT_TARGET" ] || exit 1
          docker buildx bake --push --progress=plain $DEPLOYMENT_TARGET
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          target_url: "https://github.com/${{github.repository}}/actions/runs/${{ env.GITHUB_RUN_ID }}"
          state: "success"
          deployment_id: ${{ steps.info.outputs.deployment_id }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          target_url: "https://github.com/${{github.repository}}/actions/runs/${{ env.GITHUB_RUN_ID }}"
          state: "failure"
          deployment_id: ${{ steps.info.outputs.deployment_id }}
          token: ${{ secrets.GITHUB_TOKEN }}
